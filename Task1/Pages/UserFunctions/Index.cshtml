@page
@model Task1.Pages.UserFunctions.IndexModel
@{
}


<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <link href="~/Bootstrap Design/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
          rel="stylesheet">

    <!-- Custom styles for this template-->
    <link href="~/Bootstrap Design/css/sb-admin-2.min.css" rel="stylesheet">
    <title>Sales Order!</title>

</head>

<body class="bg-gradient-primary">

    <div class="container">

        <div class="card o-hidden border-0 shadow-lg my-5">
            <div class="card-body p-0">
                <!-- Nested Row within Card Body -->
                <div class="row">
                    <div class="col-lg-12">
                        <div class="p-5">
                            <div class="text-center">
                                <h1 class="h4 text-gray-900 mb-4">Sales Order!</h1>
                            </div>
                            <form id="Sales_Order_Form" novalidate>
                                
                                <div class="form-group row">
                                    <input type="submit" value="Save Order" class="btn btn-primary btn-user btn-block" />
                                </div>
                                
                                <div class="form-group row">

                                    <div class="col-sm-6">
                                        <select class="form-control form-control-user" id="Customers" name="Customers">
                                        </select>
                                    </div>

                                    <div class="col-sm-6">
                                        <input class="form-control form-control-user" id="InvoiceNo" name="InvoiceNo" placeholder="Invoice No." data-error="#errInvoiceNo">
                                        <span class="text-danger" id="errInvoiceNo"></span>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="col-sm-6">
                                        <input class="form-control form-control-user" id="Address1" name="Address1" placeholder="Address 1" data-error="#errAddress1">
                                        <span class="text-danger" id="errAddress1"></span>
                                    </div>

                                    <div class="col-sm-6">
                                        <input class="form-control form-control-user" id="InvoiceDate" name="InvoiceDate" placeholder="Invoice Date" data-error="#errInvoiceDate">
                                        <span class="text-danger" id="errInvoiceDate"></span>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="col-sm-6">
                                        <input class="form-control form-control-user" id="Address2" name="Address2" placeholder="Address 2" data-error="#errAddress2">
                                        <span class="text-danger" id="errAddress2"></span>
                                    </div>

                                    <div class="col-sm-6">
                                        <input class="form-control form-control-user" id="ReferenceNo" name="ReferenceNo" placeholder="Reference No" data-error="#errReferenceNo">
                                        <span class="text-danger" id="errReferenceNo"></span>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="col-sm-6">
                                        <div class="form-group row">
                                            <div class="col-sm-12">
                                                <input class="form-control form-control-user" id="Address3" name="Address3" placeholder="Address 3" data-error="#errAddress3">
                                                <span class="text-danger" id="errAddress3"></span>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <div class="col-sm-12">
                                                <input class="form-control form-control-user" id="State" name="State" placeholder="State" data-error="#errState">
                                                <span class="text-danger" id="errState"></span>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <div class="col-sm-12">
                                                <input class="form-control form-control-user" id="Suburb" name="Suburb" placeholder="Suburb" data-error="#errSuburb">
                                                <span class="text-danger" id="errSuburb"></span>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <div class="col-sm-12">
                                                <input class="form-control form-control-user" id="PostCode" name="PostCode" placeholder="Post Code" data-error="#errPostCode">
                                                <span class="text-danger" id="errPostCode"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <input class="form-control form-control-user" id="Note" name="Note" placeholder="Note" data-error="#errNote">
                                        <span class="text-danger" id="errNote"></span>
                                    </div>

                                </div>

                            </form>

                            <form id="Items_Form" novalidate>
                                <div class="form-group row">
                                    <div class="col-sm-2">
                                        <select id="ItemCode" name="ItemCode">
                                        </select>
                                    </div>
                                    <div class="col-sm-2">
                                        <input type="text" name="Description" id="Description" placeholder="Description">
                                    </div>
                                    <div class="col-sm-2">
                                        <input type="text" name="Note2" id="Note2" placeholder="Note">
                                    </div>
                                    <div class="col-sm-2">
                                        <input type="text" name="Quantity" id="Quantity" placeholder="Quantity">
                                    </div>
                                    <div class="col-sm-2">
                                        <input type="text" name="Price" id="Price" placeholder="Price">
                                    </div>
                                    <div class="col-sm-2">
                                        <input type="text" name="Tax" id="Tax" placeholder="Tax">
                                    </div>
                                </div>
                                
                                <div class="form-group row">
                                    <div class="col-sm-2">
                                        <input type="hidden" name="ExclAmount" id="ExclAmount" placeholder="ExclAmount">
                                    </div>
                                    <div class="col-sm-2">
                                        <input type="hidden" name="TaxAmount" id="TaxAmount" placeholder="TaxAmount">
                                    </div>
                                    <div class="col-sm-2">
                                        <input type="hidden" name="InclAmount" id="InclAmount" placeholder="InclAmount">
                                    </div>
                                </div>
                               
                                <input type="submit" class="btn btn-success" value="Add Row">
                            </form>

                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Select</th>
                                        <th>ItemCode</th>
                                        <th>Description</th>
                                        <th>Note</th>
                                        <th>Quantity</th>
                                        <th>Price</th>
                                        <th>Tax</th>
                                        <th>ExclAmount</th>
                                        <th>TaxAmount</th>
                                        <th>InclAmount</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td></td>
                                        <td><td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td>Total:<label id="TotalExcl"></label></td>
                                        <td>Total:<label id="TotalTax"></label></td>
                                        <td>Total:<label id="TotalIncl"></label></td>
                                    </tr>
                                </tfoot>
                            </table>
                            <button type="button" class="btn btn-danger">Delete Row</button>

                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</body>

<script src="~/Bootstrap Design/vendor/jquery/jquery.min.js"></script>
<script src="~/Bootstrap Design/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="~/Bootstrap Design/vendor/jquery-easing/jquery.easing.min.js"></script>
<script src="~/Bootstrap Design/js/sb-admin-2.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script>
    $(document).ready(function () {

        validateInvoiceData();
        validateItemsData();
        getCustomerData();
        getInvoiceData();
        getItemDate();

    });

    $("#Customers").change(function () {
        AutoFillCustomerData(this.value);
    });

    $("#ItemCode").change(function () {
        AutoFillItemData(this.value);
    });

    

    function validateInvoiceData() {
        $(function () {

            jQuery.validator.addMethod("noSpace", function (value, element) {
                return value.indexOf(" ") < 0 && value != "";
            }, "No space please and don't leave it empty");

            jQuery.validator.addMethod("exactlength", function (value, element, param) {
                return this.optional(element) || value.length == param;
            }, $.validator.format("Please enter exactly {0} characters."));

            $("#Sales_Order_Form").validate({
                errorPlacement: function (error, element) {
                    var placement = $(element).data('error');
                    if (placement) {
                        $(placement).append(error)
                    } else {
                        error.insertAfter(element);
                    }
                },
                rules: {
                    Customers: {
                        required: true,
                        noSpace: true,
                        maxlength: 50
                    },
                    InvoiceNo: {
                        required: true,
                        noSpace: true,
                        maxlength: 10
                    },
                    Address1: {
                        required: true,
                        maxlength: 200
                    },
                    Address2: {
                        maxlength: 200
                    },
                    Address3: {
                        maxlength: 200
                    },
                    InvoiceDate: {
                        required: true,
                    },
                    ReferenceNo: {
                        required: true,
                        maxlength: 10
                    },
                    State: {
                        required: true,
                        noSpace: true,
                        maxlength: 50
                    },
                    Suburb: {
                        required: true,
                        maxlength: 50
                    },
                    PostCode: {
                        required: true,
                        noSpace: true,
                        number: true,
                        maxlength: 10
                    },
                    Note: {
                        maxlength: 50
                    }

                },

                messages: {
                    Customers: {
                        required: "Please provide this field !",
                        noSpace: "Please dont use spaces !",
                        maxlength: "Maximum length execced !"
                    },
                    InvoiceNo: {
                        required: "Please provide this field !",
                        noSpace: "Please dont use spaces !",
                        maxlength: "Maximum length execced !"
                    },
                    Address1: {
                        required: "Please provide this field !",
                        maxlength: "Maximum length execced !"
                    },
                    Address2: {
                        maxlength: "Maximum length execced !"
                    },
                    Address3: {
                        maxlength: "Maximum length execced !"
                    },
                    InvoiceDate: {
                        required: "Please provide this field !",
                    },
                    ReferenceNo: {
                        required: "Please provide this field !",
                        maxlength: "Maximum length execced !"
                    },
                    State: {
                        required: "Please provide this field !",
                        noSpace: "Please dont use spaces !",
                        maxlength: "Maximum length execced !"
                    },
                    Suburb: {
                        required: "Please provide this field !",
                        maxlength: "Maximum length execced !"
                    },
                    PostCode: {
                        required: "Please provide this field !",
                        noSpace: "Please dont use spaces !",
                        number: "Use only numbers",
                        maxlength: "Maximum length execced !"
                    },
                    Note: {
                        maxlength: "Maximum length execced !"
                    }
                },

                submitHandler: function (form) {
                    postInvoiceData();
                    submitTableData();
                }

            });
        });
    }

    function validateItemsData() {
        $(function () {

            jQuery.validator.addMethod("noSpace", function (value, element) {
                return value.indexOf(" ") < 0 && value != "";
            }, "No space please and don't leave it empty");

            jQuery.validator.addMethod("exactlength", function (value, element, param) {
                return this.optional(element) || value.length == param;
            }, $.validator.format("Please enter exactly {0} characters."));

            $("#Items_Form").validate({
                errorPlacement: function (error, element) {
                    var placement = $(element).data('error');
                    if (placement) {
                        $(placement).append(error)
                    } else {
                        error.insertAfter(element);
                    }
                },
                rules: {
                    ItemCode: {
                        required: true
                    },
                    Description: {
                        required: true,
                        maxlength: 50
                    },
                    Note2: {
                        maxlength: 200
                    },
                    Quantity: {
                        required: true,
                        number: true
                    },
                    Price: {
                        required: true,
                        number: true
                    },
                    Tax: {
                        required: true,
                        number: true
                    }
                    //,
                    //ExclAmount: {
                    //    required: true,
                    //    number: true
                    //},
                    //TaxAmount: {
                    //    required: true,
                    //    number: true
                    //},
                    //InclAmount: {
                    //    required: true,
                    //    number: true
                    //}

                },

                messages: {
                    Customers: {
                        required: "Please provide this field !",
                        noSpace: "Please dont use spaces !",
                        maxlength: "Maximum length execced !"
                    },
                    ItemCode: {
                        required: "Please provide this field !"
                    },
                    Description: {
                        required: "Please provide this field !",
                        maxlength: "Maximum length execced !"
                    },
                    Note2: {
                        maxlength: "Maximum length execced !"
                    },
                    Quantity: {
                        required: "Please provide this field !",
                        number: "Please use only numbers"
                    },
                    Price: {
                        required: "Please provide this field !",
                        number: "Please use only numbers"
                    },
                    Tax: {
                        required: "Please provide this field !",
                        number: "Please use only numbers"
                    }
                    //,
                    //ExclAmount: {
                    //    required: "Please provide this field !",
                    //    number: "Please use only numbers"
                    //},
                    //TaxAmount: {
                    //    required: "Please provide this field !",
                    //    number: "Please use only numbers"
                    //},
                    //InclAmount: {
                    //    required: "Please provide this field !",
                    //    number: "Please use only numbers"
                    //}
                },

                submitHandler: function (form) {
                    calculateAmounts();
                }

            });
        });
    }

    function postInvoiceData() {
        $(function () {

            var formData = new FormData();
            formData.append('Customers', $('#Customers').val());
            formData.append('InvoiceNo', $('#InvoiceNo').val());
            formData.append('Address1', $('#Address1').val());
            formData.append('Address2', $('#Address2').val());
            formData.append('Address3', $('#Address3').val());
            formData.append('InvoiceDate', $('#InvoiceDate').val());
            formData.append('ReferenceNo', $('#ReferenceNo').val());
            formData.append('Note', $('#Note').val());
            formData.append('Suburb', $('#Suburb').val());
            formData.append('State', $('#State').val());
            formData.append('PostCode', $('#PostCode').val());

            $.ajax({
                type: "POST",
                data: formData,
                url: '@Url.Action("PostInvoice", "Invoices")',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                contentType: false, // NEEDED, DON'T OMIT THIS (requires jQuery 1.6+)
                processData: false, // NEEDED, DON'T OMIT THIS
                //cache: false,
                success: function (data) {

                },

                failure: function (data) {
                    console.log("failure");
                },
                error: function (data) {
                    console.log("error");
                }
                 
            });
        });
    }

    function getCustomerData() {

    $.ajax({
            type: "GET",
            url: "/api/Customers",
            dataType: "json",
            success: function (data) {
                var userData = data;
                var newData = userData.data;

                $('#Customers').empty();
                $('#Customers').append('<option selected="true" disabled>Choose customer name...</option>');
                $('#Customers').prop('selectedIndex', 0);

                for (i = 0; i < newData.length; i++) {
                    $('#Customers').append($('<option></option>').attr('value', newData[i].customerName).text(newData[i].customerName))
                }
            },

            failure: function (data) {
                console.log("failure");
            },

            error: function (data) {
                console.log("error");
            }

        });
    }

    function AutoFillCustomerData(customerName) {

        $.ajax({
            type: "GET",
            url: "/api/Customers",
            dataType: "json",
            success: function (data) {
                var userData = data;
                var newData = userData.data;

                for (i = 0; i < newData.length; i++) {
                    if (newData[i].customerName == customerName) {
                        $("#Address1").val(newData[i].address1);
                        $("#Address2").val(newData[i].address2);
                        $("#Address3").val(newData[i].address3);
                        $("#State").val(newData[i].state);
                        $("#Suburb").val(newData[i].suburb);
                        $("#PostCode").val(newData[i].postalCode);
                    }
                }
            },

            failure: function (data) {
                console.log("failure");
            },
            error: function (data) {
                console.log("error");
            }

        });
    }

    function getInvoiceData() {

        $.ajax({
            type: "GET",
            url: "/api/Invoices",
            dataType: "json",
            success: function (data) {
                var invoiceData = data;
                var newData = invoiceData.data;

                $("#InvoiceDate").val(newData.invoiceDate);
                $("#InvoiceNo").val(newData.invoiceNo);
                console.log(data);
            },

            failure: function (data) {
                console.log("failure");
            },

            error: function (data) {
                console.log("error");
            }

        });
    }

    function getItemDate() {

        $.ajax({
            type: "GET",
            url: "/api/Items",
            dataType: "json",
            success: function (data) {
                var itemsData = data;
                var newData = itemsData.data;

                $('#ItemCode').empty();
                $('#ItemCode').append('<option selected="true" disabled>Choose Item Code...</option>');
                $('#ItemCode').prop('selectedIndex', 0);

                for (i = 0; i < newData.length; i++) {
                    $('#ItemCode').append($('<option></option>').attr('value', newData[i].itemCode).text(newData[i].itemCode))
                }
            },

            failure: function (data) {
                console.log("failure");
            },

            error: function (data) {
                console.log("error");
            }

        });
    }

    function AutoFillItemData(ItemCode) {

        $.ajax({
            type: "GET",
            url: "/api/Items",
            dataType: "json",
            success: function (data) {
                var ItemsData = data;
                var newData = ItemsData.data;

                for (i = 0; i < newData.length; i++) {
                    if (newData[i].itemCode == ItemCode) {
                        $("#Description").val(newData[i].description);
                        $("#Price").val(newData[i].price);
                    }
                }
            },

            failure: function (data) {
                console.log("failure");
            },
            error: function (data) {
                console.log("error");
            }

        });
    }

    function dynamicRowAddition() {
        $(function () { 

            var ItemCode = $("#ItemCode").val();
            var Description = $("#Description").val();
            var Note2 = $("#Note2").val();
            var Quantity = $("#Quantity").val();
            var Price = $("#Price").val();
            var Tax = $("#Tax").val();
            var ExclAmount = $("#ExclAmount").val();
            var TaxAmount = $("#TaxAmount").val();
            var InclAmount = $("#InclAmount").val();
            var markup = "<tr><td><input type='checkbox' name='record'></td><td>" + ItemCode + "</td><td>" + Description + "</td><td>" + Note2 + "</td><td>" + Quantity + "</td><td>" + Price + "</td><td>" + Tax + "</td><td>" + ExclAmount + "</td><td>" + TaxAmount + "</td><td>" + InclAmount + "</td></tr>";
            $("table tbody").append(markup);

            calculateTotal();
        });

        // Find and remove selected table rows
        $(".btn-danger").click(function () {
            $("table tbody").find('input[name="record"]').each(function () {
                if ($(this).is(":checked")) {
                    $(this).parents("tr").remove();
                }
            });

            calculateTotal();

        });

        

    }

    function submitTableData() {

        var table = $("table tbody");

        var test = table.find('tr').each(function (i, el) {
            var $tds = $(this).find('td'),
                CheckBox = $tds.eq(0).text(),
                ItemCode = $tds.eq(1).text(),
                Description = $tds.eq(2).text(),
                Note2 = $tds.eq(3).text(),
                Quantity = $tds.eq(4).text(),
                Price = $tds.eq(5).text(),
                Tax = $tds.eq(6).text(),
                ExclAmount = $tds.eq(7).text(),
                TaxAmount = $tds.eq(8).text(),
                InclAmount = $tds.eq(9).text();
            // do something with productId, product, Quantity

            alert('Row ' + (i + 1) + ':\nId: ' + ItemCode + '\nProduct: ' + Description + '\nQuantity: ' + Note2 + '\nProduct: ' + Quantity + '\nQuantity: ' + Price + '\nProduct: ' + Tax + '\nQuantity: ' + ExclAmount + '\nProduct: ' + TaxAmount + '\nQuantity: ' + InclAmount);

        });

        console.log(table);
    }

    function calculateAmounts(){
        $.ajax({
            type: "GET",
            url: "/api/Items/GetAmount",
            data: { price: $("#Quantity").val(), quantity: $("#Price").val(), tax: $("#Tax").val() },
            dataType: "json",
            success: function (data) {
                $("#ExclAmount").val(data.exclAmount);
                $("#TaxAmount").val(data.taxAmount);
                $("#InclAmount").val(data.inclAmount);

                dynamicRowAddition();
            },

            failure: function (data) {
                console.log("failure");
            },

            error: function (data) {
                console.log("error");
            }

        });
    }

    function calculateTotal() {
        var table = $("table tbody");
        var totalExclAmount = 0;
        var totalTaxAmount = 0;
        var totalInclAmount = 0;

        var test = table.find('tr').each(function (i, el) {
            var $tds = $(this).find('td'),
                ExclAmount = $tds.eq(7).text(),
                TaxAmount = $tds.eq(8).text(),
                InclAmount = $tds.eq(9).text();
            // do something with productId, product, Quantity
            totalExclAmount = totalExclAmount + parseFloat(ExclAmount);
            totalTaxAmount = totalTaxAmount + parseFloat(TaxAmount);
            totalInclAmount = totalInclAmount + parseFloat(InclAmount);
        });

        $("#TotalExcl").text(totalExclAmount);
        $("#TotalTax").text(totalTaxAmount);
        $("#TotalIncl").text(totalInclAmount);
    }
</script>